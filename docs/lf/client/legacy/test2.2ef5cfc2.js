import{_ as n,a as e,b as t,c as r,i as a,d as o,S as s,s as i,e as c,t as h,f as u,g as l,h as f,j as p,k as v,l as d,m as g,n as m,o as T,p as E}from"./client.3dfb36a3.js";import{w as I}from"./utils.6bb646a3.js";function w(n){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,o=e(n);if(r){var s=e(this).constructor;a=Reflect.construct(o,arguments,s)}else a=o.apply(this,arguments);return t(this,a)}}function x(n){var e,t,r,a,o,s,i,I,w,x,A,b,k,R,P,B,C,D,H,M,O,W,j,N,U,L,S,V,_,q,z,F,G,J,K,Q,X,Y,Z,$,nn,en,tn,rn,an,on,sn,cn,hn,un,ln,fn,pn,vn,dn,gn;return{c:function(){e=c("div"),t=c("h2"),r=h("Test "),a=h(y),o=h(" (script module + script)"),s=u(),i=c("p"),I=h("This page shows that code within a script context module element\n    is run on the server and on the client. If you reload that page\n    (and thus ask the server to regenerate that page) the script\n    context module is not run again on the server but only on the\n    client. In fact, the script context module was run while launching\n    the server: this is why the "),w=c("code"),x=h("Test#2"),A=h(" line\n    appears in the previous page."),b=u(),k=c("p"),R=h("When this page is displayed and re-loaded, the output of the\n    server and the Web console should look like:"),P=u(),B=c("center"),C=c("button"),D=c("a"),H=h("previous test"),M=u(),O=c("button"),W=c("a"),j=h("next test"),N=u(),U=c("table"),L=c("tr"),S=c("th"),V=h("server"),_=c("th"),q=h("client"),z=u(),F=c("tr"),G=c("td"),J=c("pre"),K=h("Test#2/context - I am running on server.\nTest#2 - And now, I am running on server.\n      "),Q=c("em"),X=h("after page reload"),Y=h("\nTest#2 - And now, I am running on server.\n      "),Z=c("em"),$=h("return to previous test then next test"),nn=u(),en=c("td"),tn=c("pre"),rn=h("Test#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),an=c("em"),on=h("after page reload"),sn=h("\nTest#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),cn=c("em"),hn=h("return to previous test then next test"),un=h("\nTest#1 - I am running on client.\nTest#2 - And now, I am running on client."),ln=u(),fn=c("h2"),pn=h("Conclusion"),vn=u(),dn=c("p"),gn=h("It is important to distinguish reloading a page (that is, ask the\n    server to regenerate the page) from following links (that are\n    entirely processed by the client)."),this.h()},l:function(n){e=l(n,"DIV",{});var c=f(e);t=l(c,"H2",{});var h=f(t);r=p(h,"Test "),a=p(h,y),o=p(h," (script module + script)"),h.forEach(v),s=d(c),i=l(c,"P",{});var u=f(i);I=p(u,"This page shows that code within a script context module element\n    is run on the server and on the client. If you reload that page\n    (and thus ask the server to regenerate that page) the script\n    context module is not run again on the server but only on the\n    client. In fact, the script context module was run while launching\n    the server: this is why the "),w=l(u,"CODE",{});var g=f(w);x=p(g,"Test#2"),g.forEach(v),A=p(u," line\n    appears in the previous page."),u.forEach(v),b=d(c),k=l(c,"P",{});var m=f(k);R=p(m,"When this page is displayed and re-loaded, the output of the\n    server and the Web console should look like:"),m.forEach(v),P=d(c),B=l(c,"CENTER",{});var T=f(B);C=l(T,"BUTTON",{});var E=f(C);D=l(E,"A",{href:!0});var mn=f(D);H=p(mn,"previous test"),mn.forEach(v),E.forEach(v),M=d(T),O=l(T,"BUTTON",{});var Tn=f(O);W=l(Tn,"A",{href:!0});var En=f(W);j=p(En,"next test"),En.forEach(v),Tn.forEach(v),T.forEach(v),N=d(c),U=l(c,"TABLE",{});var In=f(U);L=l(In,"TR",{});var wn=f(L);S=l(wn,"TH",{});var xn=f(S);V=p(xn,"server"),xn.forEach(v),_=l(wn,"TH",{});var yn=f(_);q=p(yn,"client"),yn.forEach(v),wn.forEach(v),z=d(In),F=l(In,"TR",{});var An=f(F);G=l(An,"TD",{});var bn=f(G);J=l(bn,"PRE",{});var kn=f(J);K=p(kn,"Test#2/context - I am running on server.\nTest#2 - And now, I am running on server.\n      "),Q=l(kn,"EM",{});var Rn=f(Q);X=p(Rn,"after page reload"),Rn.forEach(v),Y=p(kn,"\nTest#2 - And now, I am running on server.\n      "),Z=l(kn,"EM",{});var Pn=f(Z);$=p(Pn,"return to previous test then next test"),Pn.forEach(v),kn.forEach(v),bn.forEach(v),nn=d(An),en=l(An,"TD",{});var Bn=f(en);tn=l(Bn,"PRE",{});var Cn=f(tn);rn=p(Cn,"Test#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),an=l(Cn,"EM",{});var Dn=f(an);on=p(Dn,"after page reload"),Dn.forEach(v),sn=p(Cn,"\nTest#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),cn=l(Cn,"EM",{});var Hn=f(cn);hn=p(Hn,"return to previous test then next test"),Hn.forEach(v),un=p(Cn,"\nTest#1 - I am running on client.\nTest#2 - And now, I am running on client."),Cn.forEach(v),Bn.forEach(v),An.forEach(v),In.forEach(v),ln=d(c),fn=l(c,"H2",{});var Mn=f(fn);pn=p(Mn,"Conclusion"),Mn.forEach(v),vn=d(c),dn=l(c,"P",{});var On=f(dn);gn=p(On,"It is important to distinguish reloading a page (that is, ask the\n    server to regenerate the page) from following links (that are\n    entirely processed by the client)."),On.forEach(v),c.forEach(v),this.h()},h:function(){g(D,"href","test1"),g(W,"href","test3")},m:function(n,c){m(n,e,c),T(e,t),T(t,r),T(t,a),T(t,o),T(e,s),T(e,i),T(i,I),T(i,w),T(w,x),T(i,A),T(e,b),T(e,k),T(k,R),T(e,P),T(e,B),T(B,C),T(C,D),T(D,H),T(B,M),T(B,O),T(O,W),T(W,j),T(e,N),T(e,U),T(U,L),T(L,S),T(S,V),T(L,_),T(_,q),T(U,z),T(U,F),T(F,G),T(G,J),T(J,K),T(J,Q),T(Q,X),T(J,Y),T(J,Z),T(Z,$),T(F,nn),T(F,en),T(en,tn),T(tn,rn),T(tn,an),T(an,on),T(tn,sn),T(tn,cn),T(cn,hn),T(tn,un),T(e,ln),T(e,fn),T(fn,pn),T(e,vn),T(e,dn),T(dn,gn)},p:E,i:E,o:E,d:function(n){n&&v(e)}}}var y=2;function A(n){return console.log("Test#".concat(y," - And now, I am running on ").concat(I(),".")),[]}console.log("Test#".concat(y,"/context - I am running on ").concat(I(),"."));var b=function(e){n(c,s);var t=w(c);function c(n){var e;return r(this,c),e=t.call(this),a(o(e),n,A,x,i,{}),e}return c}();export default b;
