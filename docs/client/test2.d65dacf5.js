import{S as e,i as n,s as t,e as r,t as a,a as o,c as s,b as i,d as h,f as c,g as l,h as u,j as d,k as p,n as g}from"./client.56c24277.js";import{w as v}from"./utils.932e656f.js";function f(e){let n,t,v,f,T,E,I,w,x,A,y,k,b,P,R,C,D,H,M,W,$,j,B,N,O,U,L,S,V,q,z,F,G,J,K,Q,X,Y,Z,_,ee,ne,te,re,ae,oe,se,ie,he,ce,le,ue,de,pe,ge,ve;return{c(){n=r("div"),t=r("h2"),v=a("Test "),f=a(m),T=a(" (script module + script)"),E=o(),I=r("p"),w=a("This page shows that code within a script context module element\n    is run on the server and on the client. If you reload that page\n    (and thus ask the server to regenerate that page) the script\n    context module is not run again on the server but only on the\n    client. In fact, the script context module was run while launching\n    the server: this is why the "),x=r("code"),A=a("Test#2"),y=a(" line\n    appears in the previous page."),k=o(),b=r("p"),P=a("When this page is displayed and re-loaded, the output of the\n    server and the Web console should look like:"),R=o(),C=r("center"),D=r("button"),H=r("a"),M=a("previous test"),W=o(),$=r("button"),j=r("a"),B=a("next test"),N=o(),O=r("table"),U=r("tr"),L=r("th"),S=a("server"),V=r("th"),q=a("client"),z=o(),F=r("tr"),G=r("td"),J=r("pre"),K=a("Test#2/context - I am running on server.\nTest#2 - And now, I am running on server.\n      "),Q=r("em"),X=a("after page reload"),Y=a("\nTest#2 - And now, I am running on server.\n      "),Z=r("em"),_=a("return to previous test then next test"),ee=o(),ne=r("td"),te=r("pre"),re=a("Test#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),ae=r("em"),oe=a("after page reload"),se=a("\nTest#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),ie=r("em"),he=a("return to previous test then next test"),ce=a("\nTest#1 - I am running on client.\nTest#2 - And now, I am running on client."),le=o(),ue=r("h2"),de=a("Conclusion"),pe=o(),ge=r("p"),ve=a("It is important to distinguish reloading a page (that is, ask the\n    server to regenerate the page) from following links (that are\n    entirely processed by the client)."),this.h()},l(e){n=s(e,"DIV",{});var r=i(n);t=s(r,"H2",{});var a=i(t);v=h(a,"Test "),f=h(a,m),T=h(a," (script module + script)"),a.forEach(c),E=l(r),I=s(r,"P",{});var o=i(I);w=h(o,"This page shows that code within a script context module element\n    is run on the server and on the client. If you reload that page\n    (and thus ask the server to regenerate that page) the script\n    context module is not run again on the server but only on the\n    client. In fact, the script context module was run while launching\n    the server: this is why the "),x=s(o,"CODE",{});var u=i(x);A=h(u,"Test#2"),u.forEach(c),y=h(o," line\n    appears in the previous page."),o.forEach(c),k=l(r),b=s(r,"P",{});var d=i(b);P=h(d,"When this page is displayed and re-loaded, the output of the\n    server and the Web console should look like:"),d.forEach(c),R=l(r),C=s(r,"CENTER",{});var p=i(C);D=s(p,"BUTTON",{});var g=i(D);H=s(g,"A",{href:!0});var fe=i(H);M=h(fe,"previous test"),fe.forEach(c),g.forEach(c),W=l(p),$=s(p,"BUTTON",{});var me=i($);j=s(me,"A",{href:!0});var Te=i(j);B=h(Te,"next test"),Te.forEach(c),me.forEach(c),p.forEach(c),N=l(r),O=s(r,"TABLE",{});var Ee=i(O);U=s(Ee,"TR",{});var Ie=i(U);L=s(Ie,"TH",{});var we=i(L);S=h(we,"server"),we.forEach(c),V=s(Ie,"TH",{});var xe=i(V);q=h(xe,"client"),xe.forEach(c),Ie.forEach(c),z=l(Ee),F=s(Ee,"TR",{});var Ae=i(F);G=s(Ae,"TD",{});var ye=i(G);J=s(ye,"PRE",{});var ke=i(J);K=h(ke,"Test#2/context - I am running on server.\nTest#2 - And now, I am running on server.\n      "),Q=s(ke,"EM",{});var be=i(Q);X=h(be,"after page reload"),be.forEach(c),Y=h(ke,"\nTest#2 - And now, I am running on server.\n      "),Z=s(ke,"EM",{});var Pe=i(Z);_=h(Pe,"return to previous test then next test"),Pe.forEach(c),ke.forEach(c),ye.forEach(c),ee=l(Ae),ne=s(Ae,"TD",{});var Re=i(ne);te=s(Re,"PRE",{});var Ce=i(te);re=h(Ce,"Test#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),ae=s(Ce,"EM",{});var De=i(ae);oe=h(De,"after page reload"),De.forEach(c),se=h(Ce,"\nTest#2/context - I am running on client. \nTest#2 - And now, I am running on client.\n      "),ie=s(Ce,"EM",{});var He=i(ie);he=h(He,"return to previous test then next test"),He.forEach(c),ce=h(Ce,"\nTest#1 - I am running on client.\nTest#2 - And now, I am running on client."),Ce.forEach(c),Re.forEach(c),Ae.forEach(c),Ee.forEach(c),le=l(r),ue=s(r,"H2",{});var Me=i(ue);de=h(Me,"Conclusion"),Me.forEach(c),pe=l(r),ge=s(r,"P",{});var We=i(ge);ve=h(We,"It is important to distinguish reloading a page (that is, ask the\n    server to regenerate the page) from following links (that are\n    entirely processed by the client)."),We.forEach(c),r.forEach(c),this.h()},h(){u(H,"href","test1"),u(j,"href","test3")},m(e,r){d(e,n,r),p(n,t),p(t,v),p(t,f),p(t,T),p(n,E),p(n,I),p(I,w),p(I,x),p(x,A),p(I,y),p(n,k),p(n,b),p(b,P),p(n,R),p(n,C),p(C,D),p(D,H),p(H,M),p(C,W),p(C,$),p($,j),p(j,B),p(n,N),p(n,O),p(O,U),p(U,L),p(L,S),p(U,V),p(V,q),p(O,z),p(O,F),p(F,G),p(G,J),p(J,K),p(J,Q),p(Q,X),p(J,Y),p(J,Z),p(Z,_),p(F,ee),p(F,ne),p(ne,te),p(te,re),p(te,ae),p(ae,oe),p(te,se),p(te,ie),p(ie,he),p(te,ce),p(n,le),p(n,ue),p(ue,de),p(n,pe),p(n,ge),p(ge,ve)},p:g,i:g,o:g,d(e){e&&c(n)}}}let m=2;function T(e){return console.log(`Test#${m} - And now, I am running on ${v()}.`),[]}console.log(`Test#${m}/context - I am running on ${v()}.`);export default class extends e{constructor(e){super(),n(this,e,T,f,t,{})}}
