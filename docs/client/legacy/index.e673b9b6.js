import{_ as t,a as e,b as r,c as o,i as a,d as n,S as s,s as c,e as u,t as i,f as h,g as l,h as f,j as p,k as d,l as v,m as E,n as m,o as b,p as y}from"./client.3dfb36a3.js";function g(t){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var a,n=e(t);if(o){var s=e(this).constructor;a=Reflect.construct(n,arguments,s)}else a=n.apply(this,arguments);return r(this,a)}}function w(t){var e,r,o,a,n,s,c,g,w,I,O,R,C,D,L,S,T,x,k,B,G,H,j,z,A,N,P,U,W,Y,M,V,_,q,F,J,K,Q,X,Z;return{c:function(){e=u("div"),r=u("h2"),o=i("Experiments around evaluation order in Svelte Sapper"),a=h(),n=u("p"),s=i("To run these tests and analyze them, I use the following setup:"),c=h(),g=u("ul"),w=u("li"),I=i("a terminal running "),O=u("code"),R=i("npm run dev"),C=i("\n      in order to see the "),D=u("code"),L=i("console.log()"),S=i(" output\n      from the server."),T=h(),x=u("li"),k=i("a browser aiming at "),B=u("code"),G=i("http://localhost:3000/tests"),H=h(),j=u("li"),z=i("the Web console of the browser in order to see the\n      "),A=u("code"),N=i("console.log()"),P=i(" output produced by client code."),U=h(),W=u("li"),Y=i("an editor to look at the source of the tests. You may\n      alternately browse the\n      "),M=u("a"),V=i("GitHub repository"),_=i("."),q=h(),F=u("center"),J=u("button"),K=u("a"),Q=i("first test"),X=h(),Z=u("img"),this.h()},l:function(t){e=l(t,"DIV",{});var u=f(e);r=l(u,"H2",{});var i=f(r);o=p(i,"Experiments around evaluation order in Svelte Sapper"),i.forEach(d),a=v(u),n=l(u,"P",{});var h=f(n);s=p(h,"To run these tests and analyze them, I use the following setup:"),h.forEach(d),c=v(u),g=l(u,"UL",{});var E=f(g);w=l(E,"LI",{});var m=f(w);I=p(m,"a terminal running "),O=l(m,"CODE",{});var b=f(O);R=p(b,"npm run dev"),b.forEach(d),C=p(m,"\n      in order to see the "),D=l(m,"CODE",{});var y=f(D);L=p(y,"console.log()"),y.forEach(d),S=p(m," output\n      from the server."),m.forEach(d),T=v(E),x=l(E,"LI",{});var $=f(x);k=p($,"a browser aiming at "),B=l($,"CODE",{});var tt=f(B);G=p(tt,"http://localhost:3000/tests"),tt.forEach(d),$.forEach(d),H=v(E),j=l(E,"LI",{});var et=f(j);z=p(et,"the Web console of the browser in order to see the\n      "),A=l(et,"CODE",{});var rt=f(A);N=p(rt,"console.log()"),rt.forEach(d),P=p(et," output produced by client code."),et.forEach(d),U=v(E),W=l(E,"LI",{});var ot=f(W);Y=p(ot,"an editor to look at the source of the tests. You may\n      alternately browse the\n      "),M=l(ot,"A",{href:!0});var at=f(M);V=p(at,"GitHub repository"),at.forEach(d),_=p(ot,"."),ot.forEach(d),E.forEach(d),q=v(u),F=l(u,"CENTER",{});var nt=f(F);J=l(nt,"BUTTON",{});var st=f(J);K=l(st,"A",{href:!0});var ct=f(K);Q=p(ct,"first test"),ct.forEach(d),st.forEach(d),nt.forEach(d),X=v(u),Z=l(u,"IMG",{width:!0,src:!0,alt:!0}),u.forEach(d),this.h()},h:function(){E(M,"href","https://github.com/paracamplus/lf"),E(K,"href","test1"),E(Z,"width","80%"),Z.src!=="./setup.webp"&&E(Z,"src","./setup.webp"),E(Z,"alt","setup")},m:function(t,u){m(t,e,u),b(e,r),b(r,o),b(e,a),b(e,n),b(n,s),b(e,c),b(e,g),b(g,w),b(w,I),b(w,O),b(O,R),b(w,C),b(w,D),b(D,L),b(w,S),b(g,T),b(g,x),b(x,k),b(x,B),b(B,G),b(g,H),b(g,j),b(j,z),b(j,A),b(A,N),b(j,P),b(g,U),b(g,W),b(W,Y),b(W,M),b(M,V),b(W,_),b(e,q),b(e,F),b(F,J),b(J,K),b(K,Q),b(e,X),b(e,Z)},p:y,i:y,o:y,d:function(t){t&&d(e)}}}var I=function(e){t(u,s);var r=g(u);function u(t){var e;return o(this,u),e=r.call(this),a(n(e),t,null,w,c,{}),e}return u}();export default I;
