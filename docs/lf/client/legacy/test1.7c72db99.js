import{_ as e,a as t,b as n,c as r,i as o,d as a,S as s,s as i,e as c,t as h,f as l,g as f,h as u,j as v,k as p,l as d,m as g,n as E,o as T,p as m}from"./client.3dfb36a3.js";import{w as b}from"./utils.6bb646a3.js";function y(e){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var o,a=t(e);if(r){var s=t(this).constructor;o=Reflect.construct(a,arguments,s)}else o=a.apply(this,arguments);return n(this,o)}}function w(e){var t,n,r,o,a,s,i,b,y,w,I,R,x,O,P,W,B,L,C,D,H,j,A,N,S,q,F,M,U,V,_,z,G,J,K,Q,X,Y,Z,$,ee,te,ne,re,oe,ae,se,ie,ce,he;return{c:function(){t=c("div"),n=c("h2"),r=h("Test "),o=h(k),a=h(" (single script element)"),s=l(),i=c("p"),b=h("This page shows that code within a script element is (at first)\n    run on the server and on the client."),y=l(),w=c("p"),I=h("When this page is displayed, the output of the server and the Web\n    console should look like (but please, ignore the \n    "),R=c("code"),x=h("Test#2"),O=h(" line for now):"),P=l(),W=c("center"),B=c("button"),L=c("a"),C=h("first page"),D=l(),H=c("button"),j=c("a"),A=h("next test"),N=l(),S=c("table"),q=c("tr"),F=c("th"),M=h("server"),U=c("th"),V=h("client"),_=l(),z=c("tr"),G=c("td"),J=c("pre"),K=h("> LF@0.0.1 dev\n> sapper dev\n\n✔ server (2.3s)\n✔ client (2.3s)\n✔ service worker (40ms)\nTest#2/context - I am running on server.\n> Listening on http://localhost:3000\nTest#1 - I am running on server.\n     "),Q=c("em"),X=h("return to first page then back here"),Y=l(),Z=c("td"),$=c("pre"),ee=h("Test#1 - I am running on client.\n     "),te=c("em"),ne=h("return to first page then back here"),re=h("\nTest#1 - I am running on client."),oe=l(),ae=c("h2"),se=h("Conclusion"),ie=l(),ce=c("p"),he=h("When the page is loaded, code runs on both side but, if you return\n    to `first page` (with the button) then back again to `first test`.\n    Only the client code is re-run. Server code is only run when the\n    page is initially loaded or re-loaded that is, when really\n    requested from the server. The `first page` button is processed on\n    the client only."),this.h()},l:function(e){t=f(e,"DIV",{});var c=u(t);n=f(c,"H2",{});var h=u(n);r=v(h,"Test "),o=v(h,k),a=v(h," (single script element)"),h.forEach(p),s=d(c),i=f(c,"P",{});var l=u(i);b=v(l,"This page shows that code within a script element is (at first)\n    run on the server and on the client."),l.forEach(p),y=d(c),w=f(c,"P",{});var g=u(w);I=v(g,"When this page is displayed, the output of the server and the Web\n    console should look like (but please, ignore the \n    "),R=f(g,"CODE",{});var E=u(R);x=v(E,"Test#2"),E.forEach(p),O=v(g," line for now):"),g.forEach(p),P=d(c),W=f(c,"CENTER",{});var T=u(W);B=f(T,"BUTTON",{});var m=u(B);L=f(m,"A",{href:!0});var le=u(L);C=v(le,"first page"),le.forEach(p),m.forEach(p),D=d(T),H=f(T,"BUTTON",{});var fe=u(H);j=f(fe,"A",{href:!0});var ue=u(j);A=v(ue,"next test"),ue.forEach(p),fe.forEach(p),T.forEach(p),N=d(c),S=f(c,"TABLE",{});var ve=u(S);q=f(ve,"TR",{});var pe=u(q);F=f(pe,"TH",{});var de=u(F);M=v(de,"server"),de.forEach(p),U=f(pe,"TH",{});var ge=u(U);V=v(ge,"client"),ge.forEach(p),pe.forEach(p),_=d(ve),z=f(ve,"TR",{});var Ee=u(z);G=f(Ee,"TD",{});var Te=u(G);J=f(Te,"PRE",{});var me=u(J);K=v(me,"> LF@0.0.1 dev\n> sapper dev\n\n✔ server (2.3s)\n✔ client (2.3s)\n✔ service worker (40ms)\nTest#2/context - I am running on server.\n> Listening on http://localhost:3000\nTest#1 - I am running on server.\n     "),Q=f(me,"EM",{});var be=u(Q);X=v(be,"return to first page then back here"),be.forEach(p),me.forEach(p),Te.forEach(p),Y=d(Ee),Z=f(Ee,"TD",{});var ye=u(Z);$=f(ye,"PRE",{});var we=u($);ee=v(we,"Test#1 - I am running on client.\n     "),te=f(we,"EM",{});var ke=u(te);ne=v(ke,"return to first page then back here"),ke.forEach(p),re=v(we,"\nTest#1 - I am running on client."),we.forEach(p),ye.forEach(p),Ee.forEach(p),ve.forEach(p),oe=d(c),ae=f(c,"H2",{});var Ie=u(ae);se=v(Ie,"Conclusion"),Ie.forEach(p),ie=d(c),ce=f(c,"P",{});var Re=u(ce);he=v(Re,"When the page is loaded, code runs on both side but, if you return\n    to `first page` (with the button) then back again to `first test`.\n    Only the client code is re-run. Server code is only run when the\n    page is initially loaded or re-loaded that is, when really\n    requested from the server. The `first page` button is processed on\n    the client only."),Re.forEach(p),c.forEach(p),this.h()},h:function(){g(L,"href","/"),g(j,"href","test2")},m:function(e,c){E(e,t,c),T(t,n),T(n,r),T(n,o),T(n,a),T(t,s),T(t,i),T(i,b),T(t,y),T(t,w),T(w,I),T(w,R),T(R,x),T(w,O),T(t,P),T(t,W),T(W,B),T(B,L),T(L,C),T(W,D),T(W,H),T(H,j),T(j,A),T(t,N),T(t,S),T(S,q),T(q,F),T(F,M),T(q,U),T(U,V),T(S,_),T(S,z),T(z,G),T(G,J),T(J,K),T(J,Q),T(Q,X),T(z,Y),T(z,Z),T(Z,$),T($,ee),T($,te),T(te,ne),T($,re),T(t,oe),T(t,ae),T(ae,se),T(t,ie),T(t,ce),T(ce,he)},p:m,i:m,o:m,d:function(e){e&&p(t)}}}var k=1;function I(e){return console.log("Test#".concat(k," - I am running on ").concat(b(),".")),[]}var R=function(t){e(c,s);var n=y(c);function c(e){var t;return r(this,c),t=n.call(this),o(a(t),e,I,w,i,{}),t}return c}();export default R;
